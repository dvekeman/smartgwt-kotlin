plugins {
    id "de.esoco.gwt" version "1.0.9"
}

def SMARTGWT_HOME = '/opt/smartgwtee'

repositories {
    flatDir {
        dirs "$SMARTGWT_HOME/lib"
    }
}

dependencies {
    def isomorphicJars = fileTree("$SMARTGWT_HOME/lib") {
        include '*.jar'
        // servlet-api.jar conflicts with GWT / Jetty: 
        // java.lang.NoSuchMethodError: javax.servlet.http.HttpServletResponse.getHeader(Ljava/lang/String;)Ljava/lang/String;
        exclude 'servlet-api.jar'
    }
    compile(isomorphicJars)
}

gwt {
    module 'com.smartgwt.sample.BuiltInDS'
    gwtVersion = '2.8.2'
    gwtServletLib = false
    gwtElementalLib = false
    gwtPluginEclipse = false
    // Matches the version of GWT 2.8.2 Dev
    jettyVersion = '9.2.14.v20151106' 

    compile {
        logLevel = "INFO"
        compileReport = true
        draftCompile = true // Development setting
        checkAssertions = false
        style = "DETAILED" // Development setting
        optimize = 5
        failOnError = true
        sourceLevel = "1.8"
        localWorkers = 2
        localWorkersMem = 2048
        methodNameDisplayMode = "FULL" // Development setting

        // jsInteropMode = "JS"
        generateJsInteropExports = true
        // includeJsInteropExports = ["filter1", "filter2"]
        // excludeJsInteropExports = ["filter1", "filter2"]

        // extraArgs = ["-firstArgument", "-secondArgument"]

        strict = false

    }

    jetty {
        bindAddress = "127.0.0.1"
        /** request log filename. */
        logRequestFile
        /** info/warn/debug log filename. */
        logFile
        /** port to listen on. */
        port = 8182
        /** port to listen for stop command. */
        stopPort = 9089
        /** security string for stop command. */
        stopKey = "JETTY-STOP"

        /** Java args */
        maxHeapSize = "1024m"
        minHeapSize = "512m"
        maxPermSize = "128m"
        debugJava = true
        debugPort = 9555
        debugSuspend = false
        javaArgs = ["-Xmx256m", "-Xms256m"]
    }

    dev {
        bindAddress = "127.0.0.1"
        failOnError = false
        precompile = false
        /** The port where the code server will run. */
        port = 9876
        // enforceStrictResources = false
        sourceLevel = "1.8"
        logLevel = "INFO"
        // jsInteropMode = "JS"
        generateJsInteropExports = true
        methodNameDisplayMode = "FULL"
        strict = false
        noServer = false

        // extraArgs = ["-firstArgument", "-secondArgument"]

        /** Java args */
        maxHeapSize = "2g"
        minHeapSize = "1g"
        debugJava = true
        debugPort = 8000
        debugSuspend = false
        javaArgs = ["-Xmx2g", "-Xms1g"]
    }
}

//war.dependsOn(":app:copyToWeb")

//noinspection GroovyAssignabilityCheck
task checkSmartGwt {
    doLast {
        if (!file(SMARTGWT_HOME).exists() || !file("$SMARTGWT_HOME/lib").exists()) {
            String msg = "Ensure that SmartGWTEE exists at '${SMARTGWT_HOME}' and that the lib folder is located at '${SMARTGWT_HOME}/lib'.\n" +
                    "To download a trial: Go to https://www.smartclient.com/product/download.jsp\n" +
                    "To configure the path to SMARTGWT_HOME in the 'smartgwt/build.gradle'"
            throw new RuntimeException(msg)
        } else {
            project.logger.info("SmartGWTEE folder found at '${SMARTGWT_HOME}'")
        }
    }
}
compileJava.dependsOn checkSmartGwt